/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as Corti from "../../api/index.js";
import * as core from "../../core/index.js";
import { Uuid } from "./Uuid.js";
import { ResponseDocumentReadSectionsItem } from "./ResponseDocumentReadSectionsItem.js";
import { UsageInfo } from "./UsageInfo.js";

export const ResponseDocumentRead: core.serialization.ObjectSchema<
    serializers.ResponseDocumentRead.Raw,
    Corti.ResponseDocumentRead
> = core.serialization.object({
    id: Uuid.optional(),
    name: core.serialization.string().optional(),
    templateRef: core.serialization.string().optional(),
    isStream: core.serialization.boolean().optional(),
    sections: core.serialization.list(ResponseDocumentReadSectionsItem).optional(),
    createdAt: core.serialization.date().optional(),
    updatedAt: core.serialization.date().optional(),
    outputLanguage: core.serialization.string().optional(),
    usageInfo: UsageInfo.optional(),
});

export declare namespace ResponseDocumentRead {
    export interface Raw {
        id?: Uuid.Raw | null;
        name?: string | null;
        templateRef?: string | null;
        isStream?: boolean | null;
        sections?: ResponseDocumentReadSectionsItem.Raw[] | null;
        createdAt?: string | null;
        updatedAt?: string | null;
        outputLanguage?: string | null;
        usageInfo?: UsageInfo.Raw | null;
    }
}

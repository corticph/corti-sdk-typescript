/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as Corti from "../../api/index.js";
import * as core from "../../core/index.js";
import { Uuid } from "./Uuid.js";
import { InteractionsEncounterResponse } from "./InteractionsEncounterResponse.js";
import { InteractionsPatient } from "./InteractionsPatient.js";

export const InteractionsListResponseInteractionsItem: core.serialization.ObjectSchema<
    serializers.InteractionsListResponseInteractionsItem.Raw,
    Corti.InteractionsListResponseInteractionsItem
> = core.serialization.object({
    id: Uuid,
    assignedUserId: Uuid,
    encounter: InteractionsEncounterResponse,
    patient: InteractionsPatient,
    endedAt: core.serialization.date().optionalNullable(),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
    websocketUrl: core.serialization.string(),
    lastUpdated: core.serialization.date(),
});

export declare namespace InteractionsListResponseInteractionsItem {
    export interface Raw {
        id: Uuid.Raw;
        assignedUserId: Uuid.Raw;
        encounter: InteractionsEncounterResponse.Raw;
        patient: InteractionsPatient.Raw;
        endedAt?: (string | null) | null;
        createdAt: string;
        updatedAt: string;
        websocketUrl: string;
        lastUpdated: string;
    }
}

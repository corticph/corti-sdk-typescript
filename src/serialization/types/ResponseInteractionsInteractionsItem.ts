/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as Corti from "../../api/index.js";
import * as core from "../../core/index.js";
import { Uuid } from "./Uuid.js";
import { Encounter } from "./Encounter.js";
import { Patient } from "./Patient.js";

export const ResponseInteractionsInteractionsItem: core.serialization.ObjectSchema<
    serializers.ResponseInteractionsInteractionsItem.Raw,
    Corti.ResponseInteractionsInteractionsItem
> = core.serialization.object({
    id: Uuid.optional(),
    assignedUserId: Uuid.optional(),
    encounter: Encounter.optional(),
    patient: Patient.optional(),
    endedAt: core.serialization.date().optional(),
    createdAt: core.serialization.date().optional(),
    updatedAt: core.serialization.date().optional(),
    websocketUrl: core.serialization.string().optional(),
    lastUpdated: core.serialization.date().optional(),
});

export declare namespace ResponseInteractionsInteractionsItem {
    export interface Raw {
        id?: Uuid.Raw | null;
        assignedUserId?: Uuid.Raw | null;
        encounter?: Encounter.Raw | null;
        patient?: Patient.Raw | null;
        endedAt?: string | null;
        createdAt?: string | null;
        updatedAt?: string | null;
        websocketUrl?: string | null;
        lastUpdated?: string | null;
    }
}

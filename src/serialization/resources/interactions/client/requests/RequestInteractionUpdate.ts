/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index.js";
import * as Corti from "../../../../../api/index.js";
import * as core from "../../../../../core/index.js";
import { Uuid } from "../../../../types/Uuid.js";
import { RequestEncounterUpdate } from "../../../../types/RequestEncounterUpdate.js";
import { RequestPatientUpdate } from "../../../../types/RequestPatientUpdate.js";

export const RequestInteractionUpdate: core.serialization.Schema<
    serializers.RequestInteractionUpdate.Raw,
    Corti.RequestInteractionUpdate
> = core.serialization.object({
    assignedUserId: Uuid.optional(),
    encounter: RequestEncounterUpdate.optional(),
    patient: RequestPatientUpdate.optional(),
});

export declare namespace RequestInteractionUpdate {
    export interface Raw {
        assignedUserId?: Uuid.Raw | null;
        encounter?: RequestEncounterUpdate.Raw | null;
        patient?: RequestPatientUpdate.Raw | null;
    }
}
